name: Build and Package Extension

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Compile TypeScript
      run: npm run compile

    - name: Package extension
      run: npx vsce package
      
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: vscode-struct-${{ matrix.node-version }}
        path: "*.vsix"
        retention-days: 30

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: |
        if [ -f "./out/test/runTest.js" ]; then
          echo "Running tests..."
          xvfb-run -a npm test
        else
          echo "No tests found, skipping test execution"
          exit 0
        fi

  publish:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Extract version from tag
      id: extract_version
      run: |
        VERSION=${{ github.event.release.tag_name }}
        # Remove 'v' prefix if present
        VERSION=${VERSION#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Update package.json version
      run: |
        npm version ${{ steps.extract_version.outputs.version }} --no-git-tag-version

    - name: Install dependencies
      run: npm ci

    - name: Package extension
      run: npx vsce package

    - name: Upload Release Asset
      run: |
        gh release upload ${{ github.event.release.tag_name }} ./vscode-struct-${{ steps.extract_version.outputs.version }}.vsix --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Uncomment if you want to publish to VS Code Marketplace
    # - name: Publish to VS Code Marketplace
    #   run: npx vsce publish
    #   env:
    #     VSCE_PAT: ${{ secrets.VSCE_PAT }}
